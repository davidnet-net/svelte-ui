import { readFileSync, writeFileSync } from 'fs';
import path from 'path';
import { execSync } from 'child_process';

const pkg = JSON.parse(readFileSync('package.json', 'utf-8'));
const version = pkg.version;

function getGitInfo() {
  try {
    const commitHash = execSync('git rev-parse --short HEAD').toString().trim();
    const commitDate = execSync('git log -1 --format=%cI').toString().trim(); // ISO date
    const branch = execSync('git rev-parse --abbrev-ref HEAD').toString().trim();

    return { commitHash, commitDate, branch };
  } catch (e) {
    return { commitHash: 'unknown', commitDate: 'unknown', branch: 'unknown' };
  }
}

const gitInfo = getGitInfo();

const content = `//! This file is autogenerated! Edit in meta/scripts/GenerateMetaData.ts

export const metadata = {
  version: "${version}",
  commitHash: "${gitInfo.commitHash}",
  commitDate: "${gitInfo.commitDate}",
  branch: "${gitInfo.branch}"
};
`;

const outputPath = path.resolve('src/metadata.ts');
writeFileSync(outputPath, content);

console.log(`âœ… Generated metadata.ts`);
